/*
FilterLists Directory API

An ASP.NET Core API serving the core FilterList information.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm struct for FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm
type FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm struct {
	// The identifier.
	Id *int64 `json:"id,omitempty"`
	// The unique ISO 639-1 code.
	Iso6391 *string `json:"iso6391,omitempty"`
	// The unique ISO name.
	Name *string `json:"name,omitempty"`
	// The identifiers of the FilterLists targeted by this Language.
	FilterListIds []int64 `json:"filterListIds,omitempty"`
}

// NewFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm instantiates a new FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm() *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm {
	this := FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm{}
	return &this
}

// NewFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVmWithDefaults instantiates a new FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVmWithDefaults() *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm {
	this := FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) SetId(v int64) {
	o.Id = &v
}

// GetIso6391 returns the Iso6391 field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) GetIso6391() string {
	if o == nil || isNil(o.Iso6391) {
		var ret string
		return ret
	}
	return *o.Iso6391
}

// GetIso6391Ok returns a tuple with the Iso6391 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) GetIso6391Ok() (*string, bool) {
	if o == nil || isNil(o.Iso6391) {
    return nil, false
	}
	return o.Iso6391, true
}

// HasIso6391 returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) HasIso6391() bool {
	if o != nil && !isNil(o.Iso6391) {
		return true
	}

	return false
}

// SetIso6391 gets a reference to the given string and assigns it to the Iso6391 field.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) SetIso6391(v string) {
	o.Iso6391 = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) SetName(v string) {
	o.Name = &v
}

// GetFilterListIds returns the FilterListIds field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) GetFilterListIds() []int64 {
	if o == nil || isNil(o.FilterListIds) {
		var ret []int64
		return ret
	}
	return o.FilterListIds
}

// GetFilterListIdsOk returns a tuple with the FilterListIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) GetFilterListIdsOk() ([]int64, bool) {
	if o == nil || isNil(o.FilterListIds) {
    return nil, false
	}
	return o.FilterListIds, true
}

// HasFilterListIds returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) HasFilterListIds() bool {
	if o != nil && !isNil(o.FilterListIds) {
		return true
	}

	return false
}

// SetFilterListIds gets a reference to the given []int64 and assigns it to the FilterListIds field.
func (o *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) SetFilterListIds(v []int64) {
	o.FilterListIds = v
}

func (o FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Iso6391) {
		toSerialize["iso6391"] = o.Iso6391
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.FilterListIds) {
		toSerialize["filterListIds"] = o.FilterListIds
	}
	return json.Marshal(toSerialize)
}

type NullableFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm struct {
	value *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm
	isSet bool
}

func (v NullableFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) Get() *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm {
	return v.value
}

func (v *NullableFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) Set(val *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm(val *FilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) *NullableFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm {
	return &NullableFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm{value: val, isSet: true}
}

func (v NullableFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterListsDirectoryApplicationQueriesGetLanguagesLanguageVm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


