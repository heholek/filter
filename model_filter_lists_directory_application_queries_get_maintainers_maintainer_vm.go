/*
FilterLists Directory API

An ASP.NET Core API serving the core FilterList information.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm struct for FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm
type FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm struct {
	// The identifier.
	Id *int64 `json:"id,omitempty"`
	// The unique name.
	Name *string `json:"name,omitempty"`
	// The URL of the home page.
	Url NullableString `json:"url,omitempty"`
	// The email address.
	EmailAddress NullableString `json:"emailAddress,omitempty"`
	// The Twitter handle.
	TwitterHandle NullableString `json:"twitterHandle,omitempty"`
	// The identifiers of the FilterLists maintained by this Maintainer.
	FilterListIds []int64 `json:"filterListIds,omitempty"`
}

// NewFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm instantiates a new FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm() *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm {
	this := FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm{}
	return &this
}

// NewFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVmWithDefaults instantiates a new FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVmWithDefaults() *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm {
	this := FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetUrl() string {
	if o == nil || isNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) UnsetUrl() {
	o.Url.Unset()
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetEmailAddress() string {
	if o == nil || isNil(o.EmailAddress.Get()) {
		var ret string
		return ret
	}
	return *o.EmailAddress.Get()
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetEmailAddressOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.EmailAddress.Get(), o.EmailAddress.IsSet()
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) HasEmailAddress() bool {
	if o != nil && o.EmailAddress.IsSet() {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given NullableString and assigns it to the EmailAddress field.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) SetEmailAddress(v string) {
	o.EmailAddress.Set(&v)
}
// SetEmailAddressNil sets the value for EmailAddress to be an explicit nil
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) SetEmailAddressNil() {
	o.EmailAddress.Set(nil)
}

// UnsetEmailAddress ensures that no value is present for EmailAddress, not even an explicit nil
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) UnsetEmailAddress() {
	o.EmailAddress.Unset()
}

// GetTwitterHandle returns the TwitterHandle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetTwitterHandle() string {
	if o == nil || isNil(o.TwitterHandle.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterHandle.Get()
}

// GetTwitterHandleOk returns a tuple with the TwitterHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetTwitterHandleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.TwitterHandle.Get(), o.TwitterHandle.IsSet()
}

// HasTwitterHandle returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) HasTwitterHandle() bool {
	if o != nil && o.TwitterHandle.IsSet() {
		return true
	}

	return false
}

// SetTwitterHandle gets a reference to the given NullableString and assigns it to the TwitterHandle field.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) SetTwitterHandle(v string) {
	o.TwitterHandle.Set(&v)
}
// SetTwitterHandleNil sets the value for TwitterHandle to be an explicit nil
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) SetTwitterHandleNil() {
	o.TwitterHandle.Set(nil)
}

// UnsetTwitterHandle ensures that no value is present for TwitterHandle, not even an explicit nil
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) UnsetTwitterHandle() {
	o.TwitterHandle.Unset()
}

// GetFilterListIds returns the FilterListIds field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetFilterListIds() []int64 {
	if o == nil || isNil(o.FilterListIds) {
		var ret []int64
		return ret
	}
	return o.FilterListIds
}

// GetFilterListIdsOk returns a tuple with the FilterListIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) GetFilterListIdsOk() ([]int64, bool) {
	if o == nil || isNil(o.FilterListIds) {
    return nil, false
	}
	return o.FilterListIds, true
}

// HasFilterListIds returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) HasFilterListIds() bool {
	if o != nil && !isNil(o.FilterListIds) {
		return true
	}

	return false
}

// SetFilterListIds gets a reference to the given []int64 and assigns it to the FilterListIds field.
func (o *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) SetFilterListIds(v []int64) {
	o.FilterListIds = v
}

func (o FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.EmailAddress.IsSet() {
		toSerialize["emailAddress"] = o.EmailAddress.Get()
	}
	if o.TwitterHandle.IsSet() {
		toSerialize["twitterHandle"] = o.TwitterHandle.Get()
	}
	if !isNil(o.FilterListIds) {
		toSerialize["filterListIds"] = o.FilterListIds
	}
	return json.Marshal(toSerialize)
}

type NullableFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm struct {
	value *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm
	isSet bool
}

func (v NullableFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) Get() *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm {
	return v.value
}

func (v *NullableFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) Set(val *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm(val *FilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) *NullableFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm {
	return &NullableFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm{value: val, isSet: true}
}

func (v NullableFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterListsDirectoryApplicationQueriesGetMaintainersMaintainerVm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


