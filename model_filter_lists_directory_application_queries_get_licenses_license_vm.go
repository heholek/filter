/*
FilterLists Directory API

An ASP.NET Core API serving the core FilterList information.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm struct for FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm
type FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm struct {
	// The identifier.
	Id *int64 `json:"id,omitempty"`
	// The unique name.
	Name *string `json:"name,omitempty"`
	// The URL of the home page.
	Url NullableString `json:"url,omitempty"`
	// If the License permits modification.
	PermitsModification *bool `json:"permitsModification,omitempty"`
	// If the License permits distribution.
	PermitsDistribution *bool `json:"permitsDistribution,omitempty"`
	// If the License permits commercial use.
	PermitsCommercialUse *bool `json:"permitsCommercialUse,omitempty"`
	// The identifiers of the FilterLists released under this License.
	FilterListIds []int64 `json:"filterListIds,omitempty"`
}

// NewFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm instantiates a new FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm() *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm {
	this := FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm{}
	return &this
}

// NewFilterListsDirectoryApplicationQueriesGetLicensesLicenseVmWithDefaults instantiates a new FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterListsDirectoryApplicationQueriesGetLicensesLicenseVmWithDefaults() *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm {
	this := FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetUrl() string {
	if o == nil || isNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) UnsetUrl() {
	o.Url.Unset()
}

// GetPermitsModification returns the PermitsModification field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetPermitsModification() bool {
	if o == nil || isNil(o.PermitsModification) {
		var ret bool
		return ret
	}
	return *o.PermitsModification
}

// GetPermitsModificationOk returns a tuple with the PermitsModification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetPermitsModificationOk() (*bool, bool) {
	if o == nil || isNil(o.PermitsModification) {
    return nil, false
	}
	return o.PermitsModification, true
}

// HasPermitsModification returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) HasPermitsModification() bool {
	if o != nil && !isNil(o.PermitsModification) {
		return true
	}

	return false
}

// SetPermitsModification gets a reference to the given bool and assigns it to the PermitsModification field.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) SetPermitsModification(v bool) {
	o.PermitsModification = &v
}

// GetPermitsDistribution returns the PermitsDistribution field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetPermitsDistribution() bool {
	if o == nil || isNil(o.PermitsDistribution) {
		var ret bool
		return ret
	}
	return *o.PermitsDistribution
}

// GetPermitsDistributionOk returns a tuple with the PermitsDistribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetPermitsDistributionOk() (*bool, bool) {
	if o == nil || isNil(o.PermitsDistribution) {
    return nil, false
	}
	return o.PermitsDistribution, true
}

// HasPermitsDistribution returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) HasPermitsDistribution() bool {
	if o != nil && !isNil(o.PermitsDistribution) {
		return true
	}

	return false
}

// SetPermitsDistribution gets a reference to the given bool and assigns it to the PermitsDistribution field.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) SetPermitsDistribution(v bool) {
	o.PermitsDistribution = &v
}

// GetPermitsCommercialUse returns the PermitsCommercialUse field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetPermitsCommercialUse() bool {
	if o == nil || isNil(o.PermitsCommercialUse) {
		var ret bool
		return ret
	}
	return *o.PermitsCommercialUse
}

// GetPermitsCommercialUseOk returns a tuple with the PermitsCommercialUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetPermitsCommercialUseOk() (*bool, bool) {
	if o == nil || isNil(o.PermitsCommercialUse) {
    return nil, false
	}
	return o.PermitsCommercialUse, true
}

// HasPermitsCommercialUse returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) HasPermitsCommercialUse() bool {
	if o != nil && !isNil(o.PermitsCommercialUse) {
		return true
	}

	return false
}

// SetPermitsCommercialUse gets a reference to the given bool and assigns it to the PermitsCommercialUse field.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) SetPermitsCommercialUse(v bool) {
	o.PermitsCommercialUse = &v
}

// GetFilterListIds returns the FilterListIds field value if set, zero value otherwise.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetFilterListIds() []int64 {
	if o == nil || isNil(o.FilterListIds) {
		var ret []int64
		return ret
	}
	return o.FilterListIds
}

// GetFilterListIdsOk returns a tuple with the FilterListIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) GetFilterListIdsOk() ([]int64, bool) {
	if o == nil || isNil(o.FilterListIds) {
    return nil, false
	}
	return o.FilterListIds, true
}

// HasFilterListIds returns a boolean if a field has been set.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) HasFilterListIds() bool {
	if o != nil && !isNil(o.FilterListIds) {
		return true
	}

	return false
}

// SetFilterListIds gets a reference to the given []int64 and assigns it to the FilterListIds field.
func (o *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) SetFilterListIds(v []int64) {
	o.FilterListIds = v
}

func (o FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if !isNil(o.PermitsModification) {
		toSerialize["permitsModification"] = o.PermitsModification
	}
	if !isNil(o.PermitsDistribution) {
		toSerialize["permitsDistribution"] = o.PermitsDistribution
	}
	if !isNil(o.PermitsCommercialUse) {
		toSerialize["permitsCommercialUse"] = o.PermitsCommercialUse
	}
	if !isNil(o.FilterListIds) {
		toSerialize["filterListIds"] = o.FilterListIds
	}
	return json.Marshal(toSerialize)
}

type NullableFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm struct {
	value *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm
	isSet bool
}

func (v NullableFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) Get() *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm {
	return v.value
}

func (v *NullableFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) Set(val *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm(val *FilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) *NullableFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm {
	return &NullableFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm{value: val, isSet: true}
}

func (v NullableFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterListsDirectoryApplicationQueriesGetLicensesLicenseVm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


